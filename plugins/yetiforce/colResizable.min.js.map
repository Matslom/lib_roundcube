{"version":3,"file":"colResizable.min.js","sources":["colResizable.js"],"sourcesContent":["/**\n               _ _____           _          _     _      \n              | |  __ \\         (_)        | |   | |     \n      ___ ___ | | |__) |___  ___ _ ______ _| |__ | | ___ \n     / __/ _ \\| |  _  // _ \\/ __| |_  / _` | '_ \\| |/ _ \\\n    | (_| (_) | | | \\ \\  __/\\__ \\ |/ / (_| | |_) | |  __/\n     \\___\\___/|_|_|  \\_\\___||___/_/___\\__,_|_.__/|_|\\___|\n\t \n\tv1.6 - jQuery plugin created by Alvaro Prieto Lauroba\n\t\n\tLicences: MIT & GPL\n\tFeel free to use or modify this plugin as far as my full name is kept\t\n\t\n\tIf you are going to use this plug-in in production environments it is \n\tstrongly recommended to use its minified version: colResizable.min.js\n\n*/\n\n(function($){ \t\n\t\n\tvar d = $(document); \t\t//window object\n\tvar h = $(\"head\");\t\t\t//head object\n\tvar drag = null;\t\t\t//reference to the current grip that is being dragged\n\tvar tables = {};\t\t\t//object of the already processed tables (table.id as key)\n\tvar\tcount = 0;\t\t\t\t//internal count to create unique IDs when needed.\t\n\t\n\t//common strings for packing\n\tvar ID = \"id\";\t\n\tvar PX = \"px\";\n\tvar SIGNATURE =\"JColResizer\";\n    var FLEX = \"JCLRFlex\";\n\t\n\t//short-cuts\n\tvar I = parseInt;\n\tvar M = Math;\n\tvar ie = navigator.userAgent.indexOf('Trident/4.0')>0;\n\tvar S;\n\ttry{S = sessionStorage;}catch(e){}\t//Firefox crashes when executed as local file system\n\t\n\t//append required CSS rules  \n    h.append(\"<style type='text/css'>  .JColResizer{table-layout:fixed;} .JColResizer > tbody > tr > td, .JColResizer > tbody > tr > th{overflow:hidden;padding-left:0!important; padding-right:0!important;}  .JCLRgrips{ height:0px; position:relative;} .JCLRgrip{margin-left:-5px; position:absolute; z-index:5; } .JCLRgrip .JColResizer{position:absolute;background-color:red;filter:alpha(opacity=1);opacity:0;width:10px;height:100%;cursor: e-resize;top:0px} .JCLRLastGrip{position:absolute; width:1px; } .JCLRgripDrag{ border-left:1px dotted black;\t} .JCLRFlex{width:auto!important;} .JCLRgrip.JCLRdisabledGrip .JColResizer{cursor:default; display:none;}</style>\");\n\n\t\n\t/**\n\t * Function to allow column resizing for table objects. It is the starting point to apply the plugin.\n\t * @param {DOM node} tb - reference to the DOM table object to be enhanced\n\t * @param {Object} options\t- some customization values\n\t */\n\tvar init = function( tb, options){\t\n\t\tvar t = $(tb);\t\t\t\t    //the table object is wrapped\n        t.opt = options;                //each table has its own options available at anytime\n        t.mode = options.resizeMode;    //shortcuts\n        t.dc = t.opt.disabledColumns;\n\t\tif(t.opt.disable) return destroy(t);\t\t\t\t//the user is asking to destroy a previously colResized table\n\t\tvar\tid = t.id = t.attr(ID) || SIGNATURE+count++;\t//its id is obtained, if null new one is generated\t\t\n\t\tt.p = t.opt.postbackSafe; \t\t\t\t\t\t\t//short-cut to detect postback safe \t\t\n\t\tif(!t.is(\"table\") || tables[id] && !t.opt.partialRefresh) return; \t\t//if the object is not a table or if it was already processed then it is ignored.\n\t\tif (t.opt.hoverCursor !== 'e-resize') h.append(\"<style type='text/css'>.JCLRgrip .JColResizer:hover{cursor:\"+ t.opt.hoverCursor +\"!important}</style>\");  //if hoverCursor has been set, append the style\n\t\tt.addClass(SIGNATURE).attr(ID, id).before('<div class=\"JCLRgrips\"/>');\t//the grips container object is added. Signature class forces table rendering in fixed-layout mode to prevent column's min-width\n\t\tt.g = []; t.c = []; t.w = t.width(); t.gc = t.prev(); t.f=t.opt.fixed;\t//t.c and t.g are arrays of columns and grips respectively\t\t\t\t\n\t\tif(options.marginLeft) t.gc.css(\"marginLeft\", options.marginLeft);  \t//if the table contains margins, it must be specified\n\t\tif(options.marginRight) t.gc.css(\"marginRight\", options.marginRight);  \t//since there is no (direct) way to obtain margin values in its original units (%, em, ...)\n\t\tt.cs = I(ie? tb.cellSpacing || tb.currentStyle.borderSpacing :t.css('border-spacing'))||2;\t//table cellspacing (not even jQuery is fully cross-browser)\n\t\tt.b  = I(ie? tb.border || tb.currentStyle.borderLeftWidth :t.css('border-left-width'))||1;\t//outer border width (again cross-browser issues)\n\t\t// if(!(tb.style.width || tb.width)) t.width(t.width()); //I am not an IE fan at all, but it is a pity that only IE has the currentStyle attribute working as expected. For this reason I can not check easily if the table has an explicit width or if it is rendered as \"auto\"\n\t\ttables[id] = t; \t//the table object is stored using its id as key\t\n\t\tcreateGrips(t);\t\t//grips are created \n\t\n\t};\n\n\n\t/**\n\t * This function allows to remove any enhancements performed by this plugin on a previously processed table.\n\t * @param {jQuery ref} t - table object\n\t */\n\tvar destroy = function(t){\n\t\tvar id=t.attr(ID), t=tables[id];\t\t//its table object is found\n\t\tif(!t||!t.is(\"table\")) return;\t\t\t//if none, then it wasn't processed\t \n\t\tt.removeClass(SIGNATURE+\" \"+FLEX).gc.remove();\t//class and grips are removed\n\t\tdelete tables[id];\t\t\t\t\t\t//clean up data\n\t};\n\n\n\t/**\n\t * Function to create all the grips associated with the table given by parameters \n\t * @param {jQuery ref} t - table object\n\t */\n\tvar createGrips = function(t){\t\n\t\n        var th = t.find(\">thead>tr:first>th,>thead>tr:first>td\"); //table headers are obtained\n\t\tif(!th.length) th = t.find(\">tbody>tr:first>th,>tr:first>th,>tbody>tr:first>td, >tr:first>td\");\t //but headers can also be included in different ways\n\t\tth = th.filter(\":visible\");\t\t\t\t\t//filter invisible columns\n\t\tt.cg = t.find(\"col\"); \t\t\t\t\t\t//a table can also contain a colgroup with col elements\t\t\n\t\tt.ln = th.length;\t\t\t\t\t\t\t//table length is stored\t\n\t\tif(t.p && S && S[t.id])memento(t,th);\t\t//if 'postbackSafe' is enabled and there is data for the current table, its coloumn layout is restored\n\t\tth.each(function(i){\t\t\t\t\t\t//iterate through the table column headers\t\t\t\n\t\t\tvar c = $(this); \t\t\t\t\t\t//jquery wrap for the current column\t\t\n            var dc = t.dc.indexOf(i)!=-1;           //is this a disabled column?\n\t\t\tvar g = $(t.gc.append('<div class=\"JCLRgrip\"></div>')[0].lastChild); //add the visual node to be used as grip\n            g.append(dc ? \"\": t.opt.gripInnerHtml).append('<div class=\"'+SIGNATURE+'\"></div>');\n            if(i == t.ln-1){                        //if the current grip is the las one \n                g.addClass(\"JCLRLastGrip\");         //add a different css class to stlye it in a different way if needed\n                if(t.f) g.html(\"\");                 //if the table resizing mode is set to fixed, the last grip is removed since table with can not change\n            }\n            g.bind('touchstart mousedown', onGripMouseDown); //bind the mousedown event to start dragging \n            \n            if (!dc){ \n                //if normal column bind the mousedown event to start dragging, if disabled then apply its css class\n                g.removeClass('JCLRdisabledGrip').bind('touchstart mousedown', onGripMouseDown);      \n            }else{\n                g.addClass('JCLRdisabledGrip'); \n            }\n\n\t\t\tg.t = t; g.i = i; g.c = c;\tc.w =c.width();\t\t//some values are stored in the grip's node data as shortcut\n\t\t\tt.g.push(g); t.c.push(c);\t\t\t\t\t\t//the current grip and column are added to its table object\n\t\t\tc.width(c.w).removeAttr(\"width\");\t\t\t\t//the width of the column is converted into pixel-based measurements\n\t\t\tg.data(SIGNATURE, {i:i, t:t.attr(ID), last: i == t.ln-1});\t //grip index and its table name are stored in the HTML \t\t\t\t\t\t\t\t\t\t\t\t\n\t\t}); \t\n\t\tt.cg.removeAttr(\"width\");\t//remove the width attribute from elements in the colgroup \n\n\t\tt.find('td, th').not(th).not('table th, table td').each(function(){  \n\t\t\t$(this).removeAttr('width');\t//the width attribute is removed from all table cells which are not nested in other tables and dont belong to the header\n\t\t});\t\t\n        if(!t.f){\n            t.removeAttr('width').addClass(FLEX); //if not fixed, let the table grow as needed\n        }\n        syncGrips(t); \t\t\t\t//the grips are positioned according to the current table layout\t\t\t\n        //there is a small problem, some cells in the table could contain dimension values interfering with the \n        //width value set by this plugin. Those values are removed\n\t\t\n\t};\n\t\n    \n\t/**\n\t * Function to allow the persistence of columns dimensions after a browser postback. It is based in\n\t * the HTML5 sessionStorage object, which can be emulated for older browsers using sessionstorage.js\n\t * @param {jQuery ref} t - table object\n\t * @param {jQuery ref} th - reference to the first row elements (only set in deserialization)\n\t */\n\tvar memento = function(t, th){ \n\t\tvar w,m=0,i=0,aux =[],tw;\n\t\tif(th){\t\t\t\t\t\t\t\t\t\t//in deserialization mode (after a postback)\n\t\t\tt.cg.removeAttr(\"width\");\n\t\t\tif(t.opt.flush){ S[t.id] =\"\"; return;} \t//if flush is activated, stored data is removed\n\t\t\tw = S[t.id].split(\";\");\t\t\t\t\t//column widths is obtained\n\t\t\ttw = w[t.ln+1];\n            if(!t.f && tw){\t\t\t\t\t\t\t//if not fixed and table width data available its size is restored\n                t.width(tw*=1);\n                if(t.opt.overflow) {\t\t\t\t//if overfolw flag is set, restore table width also as table min-width\n                    t.css('min-width', tw + PX);\n                    t.w = tw;\n                }\n            }\n\t\t\tfor(;i<t.ln;i++){\t\t\t\t\t\t//for each column\n\t\t\t\taux.push(100*w[i]/w[t.ln]+\"%\"); \t//width is stored in an array since it will be required again a couple of lines ahead\n\t\t\t\tth.eq(i).css(\"width\", aux[i] ); \t//each column width in % is restored\n\t\t\t}\t\t\t\n\t\t\tfor(i=0;i<t.ln;i++)\n\t\t\t\tt.cg.eq(i).css(\"width\", aux[i]);\t//this code is required in order to create an inline CSS rule with higher precedence than an existing CSS class in the \"col\" elements\n\t\t}else{\t\t\t\t\t\t\t//in serialization mode (after resizing a column)\n\t\t\tS[t.id] =\"\";\t\t\t\t//clean up previous data\n\t\t\tfor(;i < t.c.length; i++){\t//iterate through columns\n\t\t\t\tw = t.c[i].width();\t\t//width is obtained\n\t\t\t\tS[t.id] += w+\";\";\t\t//width is appended to the sessionStorage object using ID as key\n\t\t\t\tm+=w;\t\t\t\t\t//carriage is updated to obtain the full size used by columns\n\t\t\t}\n\t\t\tS[t.id]+=m;\t\t\t\t\t\t\t//the last item of the serialized string is the table's active area (width), \n\t\t\t\t\t\t\t\t\t\t\t\t//to be able to obtain % width value of each columns while deserializing\n\t\t\tif(!t.f) S[t.id] += \";\"+t.width(); \t//if not fixed, table width is stored\n\t\t}\t\n\t};\n\t\n\t\n\t/**\n\t * Function that places each grip in the correct position according to the current table layout\t \n\t * @param {jQuery ref} t - table object\n\t */\n\tvar syncGrips = function (t){\t\n\t\tt.gc.width(t.w);\t\t\t//the grip's container width is updated\t\t\t\t\n\t\tfor(var i=0; i<t.ln; i++){\t//for each column\n\t\t\tvar c = t.c[i]; \t\t\t\n\t\t\tt.g[i].css({\t\t\t//height and position of the grip is updated according to the table layout\n\t\t\t\tleft: c.offset().left - t.offset().left + c.outerWidth(false) + t.cs / 2 + PX,\n\t\t\t\theight: t.opt.headerOnly? t.c[0].outerHeight(false) : t.outerHeight(false)\t\t\t\t\n\t\t\t});\t\t\t\n\t\t} \t\n\t};\n\t\n\t\n\t\n\t/**\n\t* This function updates column's width according to the horizontal position increment of the grip being\n\t* dragged. The function can be called while dragging if liveDragging is enabled and also from the onGripDragOver\n\t* event handler to synchronize grip's position with their related columns.\n\t* @param {jQuery ref} t - table object\n\t* @param {number} i - index of the grip being dragged\n\t* @param {bool} isOver - to identify when the function is being called from the onGripDragOver event\t\n\t*/\n\tvar syncCols = function(t,i,isOver){\n\t\tvar inc = drag.x-drag.l, c = t.c[i], c2 = t.c[i+1]; \t\t\t\n\t\tvar w = c.w + inc;\tvar w2= c2.w- inc;\t//their new width is obtained\t\t\t\t\t\n\t\tc.width( w + PX);\t\t\t\n\t\tt.cg.eq(i).width( w + PX); \n        if(t.f){ //if fixed mode\n            c2.width(w2 + PX);\n            t.cg.eq(i+1).width( w2 + PX);\n        }else if(t.opt.overflow) {\t\t\t\t//if overflow is set, incriment min-width to force overflow\n            t.css('min-width', t.w + inc);\n        }\n\t\tif(isOver){\n            c.w=w; \n            c2.w= t.f ? w2 : c2.w;\n        }\n\t};\n\n\t\n\t/**\n\t* This function updates all columns width according to its real width. It must be taken into account that the \n\t* sum of all columns can exceed the table width in some cases (if fixed is set to false and table has some kind \n\t* of max-width).\n\t* @param {jQuery ref} t - table object\t\n\t*/\n\tvar applyBounds = function(t){\n        var w = $.map(t.c, function(c){\t\t\t//obtain real widths\n            return c.width();\n        });\n        t.width(t.w = t.width()).removeClass(FLEX);\t//prevent table width changes\n        $.each(t.c, function(i,c){\n            c.width(w[i]).w = w[i];\t\t\t\t//set column widths applying bounds (table's max-width)\n        });\n\t\tt.addClass(FLEX);\t\t\t\t\t\t//allow table width changes\n\t};\n\t\n\t\n\t/**\n\t * Event handler used while dragging a grip. It checks if the next grip's position is valid and updates it. \n\t * @param {event} e - mousemove event binded to the window object\n\t */\n\tvar onGripDrag = function(e){\t\n\t\tif(!drag) return; \n        var t = drag.t;\t\t//table object reference \n        var oe = e.originalEvent.touches;\n        var ox = oe ? oe[0].pageX : e.pageX;    //original position (touch or mouse)\n        var x =  ox - drag.ox + drag.l;\t        //next position according to horizontal mouse position increment\n\t\tvar mw = t.opt.minWidth, i = drag.i ;\t//cell's min width\n\t\tvar l = t.cs*1.5 + mw + t.b;\n        var last = i == t.ln-1;                 \t\t\t//check if it is the last column's grip (usually hidden)\n        var min = i? t.g[i-1].position().left+t.cs+mw: l;\t//min position according to the contiguous cells\n\t\tvar max = t.f ? \t//fixed mode?\n\t\t\ti == t.ln-1? \n\t\t\t\tt.w-l: \n\t\t\t\tt.g[i+1].position().left-t.cs-mw:\n\t\t\tInfinity; \t\t\t\t\t\t\t\t//max position according to the contiguous cells \n\t\tx = M.max(min, M.min(max, x));\t\t\t\t//apply bounding\t\t\n\t\tdrag.x = x;\t drag.css(\"left\",  x + PX); \t//apply position increment\t\n        if(last){\t\t\t\t\t\t\t\t\t//if it is the last grip\n            var c = t.c[drag.i];\t\t\t\t\t//width of the last column is obtained\n\t\t\tdrag.w = c.w + x- drag.l;         \n        }              \n\t\tif(t.opt.liveDrag){ \t\t\t//if liveDrag is enabled\n\t\t\tif(last){\n\t\t\t    c.width(drag.w);\n                if(!t.f && t.opt.overflow){\t\t\t//if overflow is set, incriment min-width to force overflow\n                   t.css('min-width', t.w + x - drag.l);\n                }else {\n                    t.w = t.width();\n                }\n\t\t\t}else{\n\t\t\t\tsyncCols(t,i); \t\t\t//columns are synchronized\n\t\t\t}\n\t\t\tsyncGrips(t);\n\t\t\tvar cb = t.opt.onDrag;\t\t\t\t\t\t\t//check if there is an onDrag callback\n\t\t\tif (cb) { e.currentTarget = t[0]; cb(e); }\t\t//if any, it is fired\t\t\t\n\t\t}\n\t\treturn false; \t//prevent text selection while dragging\t\t\t\t\n\t};\n\t\n\n\t/**\n\t * Event handler fired when the dragging is over, updating table layout\n     * @param {event} e - grip's drag over event\n\t */\n\tvar onGripDragOver = function(e){\t\n\t\t\n\t\td.unbind('touchend.'+SIGNATURE+' mouseup.'+SIGNATURE).unbind('touchmove.'+SIGNATURE+' mousemove.'+SIGNATURE);\n\t\t$(\"head :last-child\").remove(); \t\t\t\t//remove the dragging cursor style\t\n\t\tif(!drag) return;\n\t\tdrag.removeClass(drag.t.opt.draggingClass);\t\t//remove the grip's dragging css-class\n        if (!(drag.x - drag.l == 0)) {\n            var t = drag.t;\n            var cb = t.opt.onResize; \t    //get some values\t\n            var i = drag.i;                 //column index\n            var last = i == t.ln-1;         //check if it is the last column's grip (usually hidden)\n            var c = t.g[i].c;               //the column being dragged\n            if(last){\n                c.width(drag.w);\n                c.w = drag.w;\n            }else{\n                syncCols(t, i, true);\t//the columns are updated\n            }\n            if(!t.f) applyBounds(t);\t//if not fixed mode, then apply bounds to obtain real width values\n            syncGrips(t);\t\t\t\t//the grips are updated\n            if (cb) { e.currentTarget = t[0]; cb(e); }\t//if there is a callback function, it is fired\n            if(t.p && S) memento(t); \t//if postbackSafe is enabled and there is sessionStorage support, the new layout is serialized and stored\n        }\n\t\tdrag = null;   //since the grip's dragging is over\t\t\t\t\t\t\t\t\t\n\t};\t\n\t\n\t\n\t/**\n\t * Event handler fired when the grip's dragging is about to start. Its main goal is to set up events \n\t * and store some values used while dragging.\n     * @param {event} e - grip's mousedown event\n\t */\n\tvar onGripMouseDown = function(e){\n\t\tvar o = $(this).data(SIGNATURE);\t\t\t//retrieve grip's data\n\t\tvar t = tables[o.t],  g = t.g[o.i];\t\t\t//shortcuts for the table and grip objects\n        var oe = e.originalEvent.touches;           //touch or mouse event?\n        g.ox = oe? oe[0].pageX: e.pageX;            //the initial position is kept\n\t\tg.l = g.position().left;\n        g.x = g.l;\n        \n\t\td.bind('touchmove.'+SIGNATURE+' mousemove.'+SIGNATURE, onGripDrag ).bind('touchend.'+SIGNATURE+' mouseup.'+SIGNATURE, onGripDragOver);\t//mousemove and mouseup events are bound\n\t\th.append(\"<style type='text/css'>*{cursor:\"+ t.opt.dragCursor +\"!important}</style>\"); \t//change the mouse cursor\n\t\tg.addClass(t.opt.draggingClass); \t//add the dragging class (to allow some visual feedback)\t\t\t\t\n\t\tdrag = g;\t\t\t\t\t\t\t//the current grip is stored as the current dragging object\n\t\tif(t.c[o.i].l) for(var i=0,c; i<t.ln; i++){ c=t.c[i]; c.l = false; c.w= c.width(); } \t//if the colum is locked (after browser resize), then c.w must be updated\t\t\n\t\treturn false; \t//prevent text selection\n\t};\n    \n    \n\t/**\n\t * Event handler fired when the browser is resized. The main purpose of this function is to update\n\t * table layout according to the browser's size synchronizing related grips \n\t */\n\tvar onResize = function(){\n\t\tfor(var t in tables){\n            if( tables.hasOwnProperty( t ) ) {\n                t = tables[t];\n                var i, mw=0;\n                t.removeClass(SIGNATURE);   //firefox doesn't like layout-fixed in some cases\n                if (t.f) {                  //in fixed mode\n                    t.w = t.width();        //its new width is kept\n                    for(i=0; i<t.ln; i++) mw+= t.c[i].w;\t\t\n                    //cell rendering is not as trivial as it might seem, and it is slightly different for\n                    //each browser. In the beginning i had a big switch for each browser, but since the code\n                    //was extremely ugly now I use a different approach with several re-flows. This works \n                    //pretty well but it's a bit slower. For now, lets keep things simple...   \n                    for(i=0; i<t.ln; i++) t.c[i].css(\"width\", M.round(1000*t.c[i].w/mw)/10 + \"%\").l=true; \n                    //c.l locks the column, telling us that its c.w is outdated\t\t\t\t\t\t\t\t\t\n                }else{     //in non fixed-sized tables\n                    applyBounds(t);         //apply the new bounds \n                    if(t.mode == 'flex' && t.p && S){   //if postbackSafe is enabled and there is sessionStorage support,\n                        memento(t);                     //the new layout is serialized and stored for 'flex' tables\n                    }\n                }\n                syncGrips(t.addClass(SIGNATURE));\n            }\n\t\t} \n\t\t\n\t};\t\t\n\n\n\t//bind resize event, to update grips position \n\t$(window).bind('resize.'+SIGNATURE, onResize); \n\n\n\t/**\n\t * The plugin is added to the jQuery library\n\t * @param {Object} options -  an object that holds some basic customization values \n\t */\n    $.fn.extend({  \n        colResizable: function(options) {           \n            var defaults = {\n\t\t\t\n\t\t\t\t//attributes:\n                \n                resizeMode: 'fit',                    //mode can be 'fit', 'flex' or 'overflow'\n                draggingClass: 'JCLRgripDrag',\t//css-class used when a grip is being dragged (for visual feedback purposes)\n\t\t\t\tgripInnerHtml: '',\t\t\t\t//if it is required to use a custom grip it can be done using some custom HTML\t\t\t\t\n\t\t\t\tliveDrag: false,\t\t\t\t//enables table-layout updating while dragging\t\n\t\t\t\tminWidth: 15, \t\t\t\t\t//minimum width value in pixels allowed for a column \n\t\t\t\theaderOnly: false,\t\t\t\t//specifies that the size of the the column resizing anchors will be bounded to the size of the first row \n\t\t\t\thoverCursor: \"e-resize\",  \t\t//cursor to be used on grip hover\n\t\t\t\tdragCursor: \"e-resize\",  \t\t//cursor to be used while dragging\n\t\t\t\tpostbackSafe: false, \t\t\t//when it is enabled, table layout can persist after postback or page refresh. It requires browsers with sessionStorage support (it can be emulated with sessionStorage.js). \n\t\t\t\tflush: false, \t\t\t\t\t//when postbakSafe is enabled, and it is required to prevent layout restoration after postback, 'flush' will remove its associated layout data \n\t\t\t\tmarginLeft: null,\t\t\t\t//in case the table contains any margins, colResizable needs to know the values used, e.g. \"10%\", \"15em\", \"5px\" ...\n\t\t\t\tmarginRight: null, \t\t\t\t//in case the table contains any margins, colResizable needs to know the values used, e.g. \"10%\", \"15em\", \"5px\" ...\n\t\t\t\tdisable: false,\t\t\t\t\t//disables all the enhancements performed in a previously colResized table\t\n\t\t\t\tpartialRefresh: false,\t\t\t//can be used in combination with postbackSafe when the table is inside of an updatePanel,\n                disabledColumns: [],            //column indexes to be excluded\n\n\t\t\t\t//events:\n\t\t\t\tonDrag: null, \t\t\t\t\t//callback function to be fired during the column resizing process if liveDrag is enabled\n\t\t\t\tonResize: null\t\t\t\t\t//callback function fired when the dragging process is over\n            }\t\t\t\n\t\t\tvar options =  $.extend(defaults, options);\t\t\n            \n            //since now there are 3 different ways of resizing columns, I changed the external interface to make it clear\n            //calling it 'resizeMode' but also to remove the \"fixed\" attribute which was confusing for many people\n            options.fixed = true;\n            options.overflow = false;\n            switch(options.resizeMode){\n                case 'flex': options.fixed = false; break;\n                case 'overflow': options.fixed = false; options.overflow = true; break;\n            }\n\n            return this.each(function() {\t\t\t\t\n             \tinit( this, options);             \n            });\n        }\n    });\n})(jQuery);\n\n"],"names":["$","d","document","h","drag","tables","count","I","parseInt","M","Math","ie","userAgent","indexOf","S","sessionStorage","e","append","tb","options","t","opt","mode","resizeMode","dc","disabledColumns","disable","id","attr","p","postbackSafe","is","partialRefresh","hoverCursor","addClass","before","g","c","w","width","gc","prev","f","fixed","marginLeft","css","marginRight","cs","cellSpacing","currentStyle","borderSpacing","b","border","borderLeftWidth","createGrips","destroy","removeClass","remove","find","th","length","filter","cg","ln","memento","each","i","lastChild","gripInnerHtml","html","bind","onGripMouseDown","push","removeAttr","data","last","not","syncGrips","tw","m","aux","flush","split","overflow","eq","left","offset","outerWidth","height","headerOnly","outerHeight","syncCols","isOver","x","l","c2","inc","w2","applyBounds","map","onGripDrag","oe","originalEvent","touches","ox","pageX","mw","minWidth","min","position","max","liveDrag","onDrag","cb","currentTarget","onGripDragOver","unbind","draggingClass","onResize","o","dragCursor","hasOwnProperty","round","window","fn","extend","colResizable","init","jQuery"],"mappings":"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"}